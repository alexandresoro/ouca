generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Comportement {
  id                  Int                   @id @default(autoincrement()) @db.UnsignedSmallInt
  code                String                @unique() @db.VarChar(6)
  libelle             String                @unique() @db.VarChar(100)
  nicheur             Nicheur?
  ownerId             String?               @map("owner_id")
  donnee_comportement donnee_comportement[]

  @@map("comportement")
}

model Donnee {
  id                   Int                   @id @default(autoincrement()) @db.UnsignedMediumInt
  inventaireId         Int                   @map("inventaire_id") @db.UnsignedMediumInt
  especeId             Int                   @map("espece_id") @db.UnsignedMediumInt
  sexeId               Int                   @map("sexe_id") @db.UnsignedSmallInt
  ageId                Int                   @map("age_id") @db.UnsignedSmallInt
  estimationNombreId   Int                   @map("estimation_nombre_id") @db.UnsignedSmallInt
  nombre               Int?                  @db.UnsignedSmallInt
  estimationDistanceId Int?                  @map("estimation_distance_id") @db.UnsignedSmallInt
  distance             Int?                  @db.UnsignedSmallInt
  commentaire          String?               @db.Text
  regroupement         Int?                  @db.UnsignedSmallInt
  date_creation        DateTime              @db.DateTime(0)
  inventaire           Inventaire            @relation(fields: [inventaireId], references: [id], map: "fk_donnee_inventaire_id")
  donnee_comportement  donnee_comportement[]
  donnee_milieu        donnee_milieu[]

  @@map("donnee")
}

model donnee_comportement {
  comportement_id Int          @db.UnsignedSmallInt
  donnee_id       Int          @db.UnsignedMediumInt
  comportement    Comportement @relation(fields: [comportement_id], references: [id], onDelete: Cascade, map: "fk_donnee_comportement_comportement_id")
  donnee          Donnee       @relation(fields: [donnee_id], references: [id], onDelete: Cascade, map: "fk_donnee_comportement_donnee_id")

  @@id([donnee_id, comportement_id])
}

model donnee_milieu {
  milieu_id Int    @db.UnsignedSmallInt
  donnee_id Int    @db.UnsignedMediumInt
  donnee    Donnee @relation(fields: [donnee_id], references: [id], onDelete: Cascade, map: "fk_donnee_milieu_donnee_id")
  milieu    Milieu @relation(fields: [milieu_id], references: [id], onDelete: Cascade, map: "fk_donnee_milieu_milieu_id")

  @@id([donnee_id, milieu_id])
}

model Inventaire {
  id                 Int                  @id @default(autoincrement()) @db.UnsignedMediumInt
  observateurId      Int                  @map("observateur_id") @db.UnsignedSmallInt
  date               DateTime             @db.Date
  heure              String?              @db.VarChar(5)
  duree              String?              @db.VarChar(5)
  lieuDitId          Int                  @map("lieudit_id") @db.UnsignedMediumInt
  altitude           Int?                 @db.UnsignedSmallInt
  longitude          Decimal?             @db.Decimal(13, 6)
  latitude           Decimal?             @db.Decimal(13, 6)
  coordinates_system CoordinatesSystem?
  temperature        Int?                 @db.TinyInt
  date_creation      DateTime             @db.DateTime(0)
  ownerId            String?              @map("owner_id")
  observateur        Observateur          @relation(fields: [observateurId], references: [id], map: "fk_inventaire_observateur_id")
  donnee             Donnee[]
  inventaire_associe inventaire_associe[]
  inventaire_meteo   inventaire_meteo[]

  @@map("inventaire")
}

model inventaire_associe {
  inventaire_id  Int         @db.UnsignedMediumInt
  observateur_id Int         @db.UnsignedSmallInt
  inventaire     Inventaire  @relation(fields: [inventaire_id], references: [id], onDelete: Cascade, map: "fk_inventaire_associe_inventaire_id")
  observateur    Observateur @relation(fields: [observateur_id], references: [id], onDelete: Cascade, map: "fk_inventaire_associe_observateur_id")

  @@id([inventaire_id, observateur_id])
}

model inventaire_meteo {
  meteo_id      Int        @db.UnsignedSmallInt
  inventaire_id Int        @db.UnsignedMediumInt
  inventaire    Inventaire @relation(fields: [inventaire_id], references: [id], onDelete: Cascade, map: "fk_inventaire_meteo_inventaire_id")
  meteo         Meteo      @relation(fields: [meteo_id], references: [id], onDelete: Cascade, map: "fk_inventaire_meteo_meteo_id")

  @@id([inventaire_id, meteo_id])
}

model Meteo {
  id               Int                @id @default(autoincrement()) @db.UnsignedSmallInt
  libelle          String             @unique() @db.VarChar(100)
  ownerId          String?            @map("owner_id")
  inventaire_meteo inventaire_meteo[]

  @@map("meteo")
}

model Milieu {
  id            Int             @id @default(autoincrement()) @db.UnsignedSmallInt
  code          String          @unique() @db.VarChar(6)
  libelle       String          @unique() @db.VarChar(100)
  ownerId       String?         @map("owner_id")
  donnee_milieu donnee_milieu[]

  @@map("milieu")
}

model Observateur {
  id                 Int                  @id @default(autoincrement()) @db.UnsignedSmallInt
  libelle            String               @unique() @db.VarChar(100)
  ownerId            String?              @map("owner_id")
  inventaire         Inventaire[]
  inventaire_associe inventaire_associe[]

  @@map("observateur")
}

enum Nicheur {
  possible
  probable
  certain
}

enum CoordinatesSystem {
  gps
  lambert93
}
