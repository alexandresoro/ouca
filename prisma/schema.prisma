generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Age {
  id       Int        @id @default(autoincrement()) @db.UnsignedSmallInt
  libelle  String     @unique @db.VarChar(100)
  donnee   Donnee[]
  settings Settings[]

  @@map("age")
}

model Classe {
  id      Int      @id @default(autoincrement()) @db.UnsignedSmallInt
  libelle String   @unique @db.VarChar(100)
  espece  Espece[]

  @@map("classe")
}

model Commune {
  id            Int         @id @default(autoincrement()) @db.UnsignedSmallInt
  departementId Int         @map("departement_id") @db.UnsignedSmallInt
  code          Int         @db.UnsignedSmallInt
  nom           String      @db.VarChar(100)
  departement   Departement @relation(fields: [departementId], references: [id])
  lieudit       Lieudit[]

  @@unique([departementId, code], name: "idx_unq_commune_1")
  @@unique([departementId, nom], name: "idx_unq_commune_2")
  @@unique([departementId, code, nom], name: "idx_unq_commune_3")
  @@map("commune")
}

enum Nicheur {
  possible
  probable
  certain
}

model Comportement {
  id                  Int                   @id @default(autoincrement()) @db.UnsignedSmallInt
  code                String                @unique @db.VarChar(6)
  libelle             String                @unique @db.VarChar(100)
  nicheur             Nicheur?
  donnee_comportement donnee_comportement[]

  @@unique([code, libelle], name: "idx_unq_comportement")
  @@map("comportement")
}

model configuration {
  id      Int    @id @default(autoincrement()) @db.UnsignedSmallInt
  libelle String @unique @db.VarChar(100)
  value   String @db.VarChar(100)
}

model Departement {
  id       Int        @id @default(autoincrement()) @db.UnsignedSmallInt
  code     String     @unique @db.VarChar(100)
  commune  Commune[]
  settings Settings[]

  @@map("departement")
}

model Donnee {
  id                   Int                   @id @default(autoincrement()) @db.UnsignedMediumInt
  inventaireId         Int                   @map("inventaire_id") @db.UnsignedMediumInt
  especeId             Int                   @map("espece_id") @db.UnsignedMediumInt
  sexeId               Int                   @map("sexe_id") @db.UnsignedSmallInt
  ageId                Int                   @map("age_id") @db.UnsignedSmallInt
  estimationNombreId   Int                   @map("estimation_nombre_id") @db.UnsignedSmallInt
  nombre               Int?                  @db.UnsignedSmallInt
  estimationDistanceId Int?                  @map("estimation_distance_id") @db.UnsignedSmallInt
  distance             Int?                  @db.UnsignedSmallInt
  commentaire          String?               @db.Text
  regroupement         Int?                  @db.UnsignedSmallInt
  date_creation        DateTime              @db.DateTime(0)
  age                  Age                   @relation(fields: [ageId], references: [id])
  espece               Espece                @relation(fields: [especeId], references: [id])
  estimationNombre     EstimationNombre      @relation(fields: [estimationNombreId], references: [id])
  estimationDistance   EstimationDistance?   @relation(fields: [estimationDistanceId], references: [id])
  inventaire           Inventaire            @relation(fields: [inventaireId], references: [id])
  sexe                 Sexe                  @relation(fields: [sexeId], references: [id])
  donnee_comportement  donnee_comportement[]
  donnee_milieu        donnee_milieu[]


  @@index([ageId], name: "fk_donnee_age_id")
  @@index([especeId], name: "fk_donnee_espece_id")
  @@index([estimationNombreId], name: "fk_donnee_estimationnombre_id")
  @@index([estimationDistanceId], name: "fk_donnee_estimationdistance_id")
  @@index([inventaireId], name: "fk_donnee_inventaire_id")
  @@index([sexeId], name: "fk_donnee_sexe_id")
  @@map("donnee")
}

model donnee_comportement {
  comportement_id Int          @db.UnsignedSmallInt
  donnee_id       Int          @db.UnsignedMediumInt
  comportement    Comportement @relation(fields: [comportement_id], references: [id])
  donnee          Donnee       @relation(fields: [donnee_id], references: [id])

  @@id([donnee_id, comportement_id])
  @@index([comportement_id], name: "fk_donnee_comportement_comportement_id")
}

model donnee_milieu {
  milieu_id Int    @db.UnsignedSmallInt
  donnee_id Int    @db.UnsignedMediumInt
  donnee    Donnee @relation(fields: [donnee_id], references: [id])
  milieu    Milieu @relation(fields: [milieu_id], references: [id])

  @@id([donnee_id, milieu_id])
  @@index([milieu_id], name: "fk_donnee_milieu_milieu_id")
}

model Espece {
  id          Int      @id @default(autoincrement()) @db.UnsignedMediumInt
  classeId    Int?     @map("classe_id") @db.UnsignedSmallInt
  code        String   @db.VarChar(20)
  nomFrancais String   @map("nom_francais") @db.VarChar(100)
  nomLatin    String   @map("nom_latin") @db.VarChar(100)
  classe      Classe?  @relation(fields: [classeId], references: [id])
  donnee      Donnee[]


  @@unique([classeId, code], name: "idx_unq_espece_1")
  @@unique([classeId, nomFrancais], name: "idx_unq_espece_2")
  @@unique([classeId, nomLatin], name: "idx_unq_espece_3")
  @@unique([classeId, nomFrancais, nomLatin], name: "idx_unq_espece_4")
  @@unique([classeId, code, nomLatin], name: "idx_unq_espece_5")
  @@unique([classeId, code, nomFrancais], name: "idx_unq_espece_6")
  @@unique([classeId, code, nomFrancais, nomLatin], name: "idx_unq_espece_7")
  @@map("espece")
}

model EstimationDistance {
  id      Int      @id @default(autoincrement()) @db.UnsignedSmallInt
  libelle String   @unique @db.VarChar(100)
  donnee  Donnee[]

  @@map("estimation_distance")
}

model EstimationNombre {
  id        Int        @id @default(autoincrement()) @db.UnsignedSmallInt
  libelle   String     @unique @db.VarChar(100)
  nonCompte Boolean    @map("non_compte") @db.Bit(1)
  donnee    Donnee[]
  settings  Settings[]

  @@map("estimation_nombre")
}

model Inventaire {
  id                 Int                  @id @default(autoincrement()) @db.UnsignedMediumInt
  observateur_id     Int                  @db.UnsignedSmallInt
  date               DateTime             @db.Date
  heure              String?              @db.VarChar(5)
  duree              String?              @db.VarChar(5)
  lieudit_id         Int                  @db.UnsignedMediumInt
  altitude           Int?                 @db.UnsignedSmallInt
  longitude          Decimal?             @db.Decimal(13, 6)
  latitude           Decimal?             @db.Decimal(13, 6)
  coordinates_system CoordinatesSystem?
  longitude_l2e      Int?                 @db.UnsignedMediumInt
  latitude_l2e       Int?                 @db.UnsignedMediumInt
  temperature        Int?                 @db.TinyInt
  date_creation      DateTime             @db.DateTime(0)
  lieuDit            Lieudit              @relation(fields: [lieudit_id], references: [id])
  observateur        Observateur          @relation(fields: [observateur_id], references: [id])
  donnee             Donnee[]
  inventaire_associe inventaire_associe[]
  inventaire_meteo   inventaire_meteo[]

  @@index([lieudit_id], name: "fk_inventaire_lieudit_id")
  @@index([observateur_id], name: "fk_inventaire_observateur_id")
  @@index([observateur_id, date, heure, duree, lieudit_id, altitude, longitude, latitude, temperature, date_creation], name: "index_inventaire_all")
  @@map("inventaire")
}

model inventaire_associe {
  inventaire_id  Int         @db.UnsignedMediumInt
  observateur_id Int         @db.UnsignedSmallInt
  inventaire     Inventaire  @relation(fields: [inventaire_id], references: [id])
  observateur    Observateur @relation(fields: [observateur_id], references: [id])

  @@id([inventaire_id, observateur_id])
  @@index([observateur_id], name: "fk_inventaire_associe_observateur_id")
}

model inventaire_meteo {
  meteo_id      Int        @db.UnsignedSmallInt
  inventaire_id Int        @db.UnsignedMediumInt
  inventaire    Inventaire @relation(fields: [inventaire_id], references: [id])
  meteo         Meteo      @relation(fields: [meteo_id], references: [id])

  @@id([inventaire_id, meteo_id])
  @@index([meteo_id], name: "fk_inventaire_meteo_meteo_id")
}

model Lieudit {
  id                Int               @id @default(autoincrement()) @db.UnsignedMediumInt
  communeId         Int               @map("commune_id") @db.UnsignedSmallInt
  nom               String            @db.VarChar(150)
  altitude          Int               @db.UnsignedSmallInt
  longitude         Decimal?          @db.Decimal(13, 6)
  latitude          Decimal?          @db.Decimal(13, 6)
  coordinatesSystem CoordinatesSystem @map("coordinates_system")
  longitude_l2e     Int?              @db.UnsignedMediumInt
  latitude_l2e      Int?              @db.UnsignedMediumInt
  commune           Commune           @relation(fields: [communeId], references: [id])
  inventaire        Inventaire[]

  @@unique([communeId, nom], name: "idx_unq_lieudit")
  @@map("lieudit")
}

model Meteo {
  id               Int                @id @default(autoincrement()) @db.UnsignedSmallInt
  libelle          String             @unique @db.VarChar(100)
  inventaire_meteo inventaire_meteo[]

  @@map("meteo")
}

model Milieu {
  id            Int             @id @default(autoincrement()) @db.UnsignedSmallInt
  code          String          @unique @db.VarChar(6)
  libelle       String          @unique @db.VarChar(100)
  donnee_milieu donnee_milieu[]

  @@map("milieu")
}

model Observateur {
  id                 Int                  @id @default(autoincrement()) @db.UnsignedSmallInt
  libelle            String               @unique @db.VarChar(100)
  inventaire         Inventaire[]
  inventaire_associe inventaire_associe[]
  settings           Settings[]

  @@map("observateur")
}

enum CoordinatesSystem {
  gps
  lambert93
}

model Settings {
  id                        Int               @id @default(autoincrement()) @db.UnsignedSmallInt
  user_id                   Int               @unique @db.UnsignedSmallInt
  defaultObservateurId      Int?              @map("default_observateur_id") @db.UnsignedSmallInt
  defaultDepartementId      Int?              @map("default_departement_id") @db.UnsignedSmallInt
  defaultAgeId              Int?              @map("default_age_id") @db.UnsignedSmallInt
  defaultSexeId             Int?              @map("default_sexe_id") @db.UnsignedSmallInt
  defaultEstimationNombreId Int?              @map("default_estimation_nombre_id") @db.UnsignedSmallInt
  defaultNombre             Int?              @map("default_nombre") @db.UnsignedSmallInt
  areAssociesDisplayed      Boolean           @default(dbgenerated("(b'1')")) @map("are_associes_displayed") @db.Bit(1)
  isMeteoDisplayed          Boolean           @default(dbgenerated("(b'1')")) @map("is_meteo_displayed") @db.Bit(1)
  isDistanceDisplayed       Boolean           @default(dbgenerated("(b'1')")) @map("is_distance_displayed") @db.Bit(1)
  isRegroupementDisplayed   Boolean           @default(dbgenerated("(b'1')")) @map("is_regroupement_displayed") @db.Bit(1)
  coordinatesSystem         CoordinatesSystem @default(gps) @map("coordinates_system")
  defaultAge                Age?              @relation(fields: [defaultAgeId], references: [id])
  defaultDepartement        Departement?      @relation(fields: [defaultDepartementId], references: [id])
  defaultEstimationNombre   EstimationNombre? @relation(fields: [defaultEstimationNombreId], references: [id])
  defaultObservateur        Observateur?      @relation(fields: [defaultObservateurId], references: [id])
  defaultSexe               Sexe?             @relation(fields: [defaultSexeId], references: [id])
  user                      User              @relation(fields: [user_id], references: [id])


  @@index([defaultAgeId], name: "fk_settings_age_id")
  @@index([defaultDepartementId], name: "fk_settings_departement_id")
  @@index([defaultEstimationNombreId], name: "fk_settings_estimation_nombre_id")
  @@index([defaultObservateurId], name: "fk_settings_observateur_id")
  @@index([defaultSexeId], name: "fk_settings_sexe_id")
  @@map("settings")
}

model Sexe {
  id       Int        @id @default(autoincrement()) @db.UnsignedSmallInt
  libelle  String     @unique @db.VarChar(100)
  donnee   Donnee[]
  settings Settings[]

  @@map("sexe")
}

model User {
  id        Int       @id @default(autoincrement()) @db.UnsignedSmallInt
  firstname String    @db.VarChar(100)
  lastname  String    @db.VarChar(100)
  settings  Settings?

  @@map("user")
}

model Version {
  version Int @id @db.UnsignedSmallInt

  @@map("version")
}
