name: PNPM dependencies maintenance

on:
  schedule:
    - cron: '0 4 * * SUN'
  workflow_dispatch:

jobs:
  pnpm-update:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@a5ac7e51b41094c92402da3b24376905380afc29 # v4

      - uses: pnpm/action-setup@v4

      - uses: actions/setup-node@60edb5dd545a775178f52524783378180af0d1f8 # v4
        with:
          node-version-file: .tool-versions
          cache: "pnpm"

      - name: Run update
        run: pnpm update -r

      - name: Check if there's anything to commit
        id: git-diff
        run: |
          if git diff -q --exit-code; then
            echo "has-changes=false" >> $GITHUB_OUTPUT
          else
            echo "has-changes=true" >> $GITHUB_OUTPUT
          fi

      - name: Generate branch
        id: generate-branch
        if: steps.git-diff.outputs.has-changes == 'true'
        run: echo "branch=deps/pnpm-update-$(date +%s)" >> $GITHUB_OUTPUT

      - uses: EndBug/add-and-commit@a94899bca583c204427a224a7af87c02f9b325d5 # v9
        if: steps.git-diff.outputs.has-changes == 'true'
        with:
          add: "pnpm-lock.yaml"
          message: "chore(deps): update lockfile"
          new_branch: ${{ steps.generate-branch.outputs.branch }}
          push: true

      - name: Generate app token
        if: steps.git-diff.outputs.has-changes == 'true'
        id: generate-app-token
        uses: tibdex/github-app-token@3beb63f4bd073e61482598c45c71c1019b59b73a # v2.1.0
        with:
          app_id: ${{ secrets.BOT_APP_ID }}
          private_key: ${{ secrets.BOT_PRIVATE_KEY }}

      - name: Authenticate gh cli with app token for bot
        if: steps.git-diff.outputs.has-changes == 'true'
        run: echo "${{ steps.generate-app-token.outputs.token }}" | gh auth login --with-token

      - name: Create pull request and set auto-merge
        if: steps.git-diff.outputs.has-changes == 'true'
        run: |
          gh pr create --fill
          gh pr merge --auto --squash

      - name: Approve PR
        if: steps.git-diff.outputs.has-changes == 'true'
        run: |
          gh pr review --approve
        env:
          GH_TOKEN: ${{ github.token }}
