name: PNPM dependencies maintenance

on:
  schedule:
    - cron: '0 5 * * MON'
  workflow_dispatch:

jobs:
  pnpm-dedupe:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Setup versions
        run: |
          echo "NODE_VERSION=$(jq -r .engines.node package.json)" >> $GITHUB_ENV
          echo "PNPM_VERSION=$(jq -r .engines.pnpm package.json | sed -En 's/^(~|\^|>=)*([0-9]+\.[0-9]+\.[0-9]+$)/\2/p')" >> $GITHUB_ENV

      - uses: pnpm/action-setup@v3
        with:
          version: ${{ env.PNPM_VERSION }}

      - uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "pnpm"

      - name: Run dedupe
        run: pnpm dedupe

      - name: Check if there's anything to commit
        id: git-diff
        run: |
          if git diff -q --exit-code; then
            echo "has-changes=false" >> $GITHUB_OUTPUT
          else
            echo "has-changes=true" >> $GITHUB_OUTPUT
          fi

      - name: Generate branch
        id: generate-branch
        if: steps.git-diff.outputs.has-changes == 'true'
        run: echo "branch=deps/pnpm-dedupe-$(date +%s)" >> $GITHUB_OUTPUT

      - uses: EndBug/add-and-commit@v9
        if: steps.git-diff.outputs.has-changes == 'true'
        with:
          add: "pnpm-lock.yaml"
          message: "chore(deps): dedupe pnpm dependencies"
          new_branch: ${{ steps.generate-branch.outputs.branch }}
          push: true

      - name: Create pull request
        if: steps.git-diff.outputs.has-changes == 'true'
        run: gh pr create --fill
        env:
          GH_TOKEN: ${{ github.token }}

      # https://gist.github.com/xt0rted/46475099dc0a70ba63e16e3177407872
      # https://github.com/dependabot/fetch-metadata/issues/111
      - name: Generate app token
        id: generate-app-token
        uses: tibdex/github-app-token@v2.1.0
        with:
          app_id: ${{ secrets.BOT_APP_ID }}
          private_key: ${{ secrets.BOT_PRIVATE_KEY }}

      - name: Authenticate gh cli with app token for bot
        if: steps.git-diff.outputs.has-changes == 'true'
        run: echo "${{ steps.generate-app-token.outputs.token }}" | gh auth login --with-token

      - name: Create pull request, approve and set auto-merge
        if: steps.git-diff.outputs.has-changes == 'true'
        run: |
          gh pr review --approve
          gh pr merge --auto --squash
