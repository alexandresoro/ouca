name: Build, Test & Deploy

on:
  push:
    branches:
      - '*'

concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:    
    uses: ./.github/workflows/_build.yml
    secrets: inherit
    with:
      with-sentry: ${{ github.ref == format('refs/heads/{0}', github.event.repository.default_branch) }}
      upload-backend: true

  deploy-frontend:
    needs: build

    uses: ./.github/workflows/_deploy-cloudflare.yml
    secrets: inherit
    with:
      artifact: dist-frontend
      branch: ${{ github.ref_name }}
      distPath: './packages/frontend/dist'

  publish-backend-image:
    needs: build

    runs-on: ubuntu-latest

    outputs:
      image-label: ${{ steps.meta.outputs.version }}
      image-digest: ${{ steps.docker_build.outputs.digest }}

    steps:
      - uses: actions/checkout@v4

      - name: Setup versions
        run: |
          echo "NODE_VERSION=$(jq -r .engines.node package.json)" >> $GITHUB_ENV
          echo "PNPM_VERSION=$(jq -r .engines.pnpm package.json | sed -En 's/^(~|\^|>=)*([0-9]+\.[0-9]+\.[0-9]+$)/\2/p')" >> $GITHUB_ENV

      - uses: docker/metadata-action@v5
        id: meta
        with:
          images: |
            ghcr.io/${{ github.repository }}-backend
          tags: |
            # branch event
            type=ref,event=branch
            # tag event
            type=ref,event=tag
            # set latest tag for default branch
            type=raw,value=latest,enable={{is_default_branch}}
          flavor: |
            latest=false

      - uses: docker/setup-qemu-action@v3

      - uses: docker/setup-buildx-action@v3
        id: buildx

      - uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push to GitHub Container Registry
        id: docker_build
        uses: docker/build-push-action@v5
        with:
          builder: ${{ steps.buildx.outputs.name }}
          build-args: |
            "NODE_IMAGE_VERSION=${{ env.NODE_VERSION }}"
            "PNPM_VERSION=${{ env.PNPM_VERSION }}"
            "GIT_SHA=${{ github.sha }}"
          context: .
          platforms: |
            linux/amd64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  deploy-backend-trigger:
    needs: publish-backend-image
    concurrency: deploy-backend-${{ github.ref }}

    runs-on: ubuntu-latest

    steps:
      - name: Dispatch backend image update
        run: gh workflow run --repo alexandresoro/k3s -f label=${{ needs.publish-backend-image.outputs.image-label }} -f digest=${{ needs.publish-backend-image.outputs.image-digest }} -f isProduction=${{ github.ref == format('refs/heads/{0}', github.event.repository.default_branch) }} ouca-backend-image-update.yaml
        env:
          GITHUB_TOKEN: ${{ secrets.DISPATCH_TOKEN }}
