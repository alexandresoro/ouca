name: Build, Test & Deploy

on:
  push:
    branches:
      - '*'

jobs:
  build:    
    uses: ./.github/workflows/_build.yml
    secrets: inherit
    with:
      with-sentry: ${{ github.ref == format('refs/heads/{0}', github.event.repository.default_branch) }}
      upload-backend: true

  deploy-frontend:
    needs: build
    concurrency:
      group: deploy-frontend-${{ github.ref }}
      cancel-in-progress: true

    uses: ./.github/workflows/_deploy-cloudflare.yml
    secrets: inherit
    with:
      artifact: dist-frontend
      branch: ${{ github.ref_name }}
      distPath: './packages/frontend/dist'

  publish-backend-image:
    needs: build
    concurrency: publish-backend-docker-${{ github.ref }}

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Retrieve artifact
        uses: actions/download-artifact@v3
        with:
          name: dist-node-lts
          path: build

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            ghcr.io/${{ github.repository }}-backend
          tags: |
            # branch event
            type=ref,event=branch
            # tag event
            type=ref,event=tag
            # set latest tag for default branch
            type=raw,value=latest,enable={{is_default_branch}}
          flavor: |
            latest=false

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2

      - name: Log into GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push to GitHub Container Registry
        id: docker_build
        uses: docker/build-push-action@v4
        with:
          builder: ${{ steps.buildx.outputs.name }}
          build-args: |
            NODE_IMAGE_VERSION=${{ needs.build.outputs.nodeVersion }}
            GIT_SHA=${{ github.sha }}
          context: .
          file: Dockerfile.ci
          platforms: |
            linux/amd64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Dispatch backend image update
        run: gh workflow run --repo alexandresoro/k3s -f label=${{ steps.meta.outputs.version }} -f digest=${{ steps.docker_build.outputs.digest }} -f isProduction=${{ github.ref == format('refs/heads/{0}', github.event.repository.default_branch) }} ouca-backend-image-update.yaml
        env:
          GITHUB_TOKEN: ${{ secrets.DISPATCH_TOKEN }}
