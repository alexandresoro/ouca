name: CI/CD

on:
  push:
    branches:
      - master
      - dev
    tags:
      - "v*.*.*"
  pull_request:
    branches:
      - master

jobs:
  check-build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        include:
          - node-version: 16.x
            type: "build,lts"
          - node-version: 17.x
            type: "next"

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install dependencies
        run: npm ci

      - name: Lint
        run: npm run lint

      - name: Build
        run: npm run build

  docker-publish:
    needs: check-build

    if: github.event_name == 'push'
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Set the default docker tag
        run: |
          echo "DOCKER_TAG=latest" >> $GITHUB_ENV

      - name: Set docker tag as dev if on dev branch
        if: github.ref == 'refs/heads/dev'
        run: |
          echo "DOCKER_TAG=dev" >> $GITHUB_ENV

      - name: Retrieve docker label if this is a tag push
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          echo "DOCKER_TAG=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Log into GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.CR_PAT }}
          
      - name: Log into SCW Container Registry
        uses: docker/login-action@v1
        with:
          registry: ${{ secrets.SCW_REGISTRY_URL }}
          username: nologin
          password: ${{ secrets.SCW_REGISTRY_TOKEN }}

      - name: Build and push to GitHub Container Registry
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          builder: ${{ steps.buildx.outputs.name }}
          context: .
          platforms: |
            linux/amd64
          push: true
          tags: |
            ghcr.io/${{ github.repository }}:${{ env.DOCKER_TAG }}
            ${{ secrets.SCW_REGISTRY_URL}}/${{ github.event.repository.name }}:${{ env.DOCKER_TAG }}
