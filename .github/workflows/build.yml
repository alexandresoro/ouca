name: CI/CD

on:
  push:
    branches:
      - main
    tags:
      - "v*.*.*"
      - "*.*.*"
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    outputs:
      nodeVersion: ${{ steps.nodeVersion.outputs.nodeVersion }}

    steps:
      - name: Setup Node version
        id: nodeVersion
        run: |
          echo "nodeVersion=18" >> $GITHUB_OUTPUT
          echo "nodeVersion=18" >> $GITHUB_ENV

      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: ${{ env.nodeVersion }}
          cache: "npm"

      - uses: google/wireit@setup-github-actions-caching/v1

      - name: Install dependencies
        run: npm ci

      - name: Check & validate
        run: npm run check:ci

      - name: Build
        run: npm run build:ci

      - name: Upload artifact - backend
        if: github.event_name == 'push'
        uses: actions/upload-artifact@v3
        with:
          name: dist-node-lts
          path: |
            packages/backend/dist/
            packages/common/dist/
            packages/backend/migrations/
            package.json
            package-lock.json
            packages/backend/package.json
            packages/common/package.json
            !**/node_modules/**
          retention-days: 1
          if-no-files-found: error

  publish-backend-image:
    needs: build

    if: github.event_name == 'push'
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Retrieve artifact
        uses: actions/download-artifact@v3
        with:
          name: dist-node-lts
          path: build

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            ghcr.io/${{ github.repository }}-backend
          tags: |
            # branch event
            type=ref,event=branch
            # tag event
            type=ref,event=tag
            # set latest tag for default branch
            type=raw,value=latest,enable={{is_default_branch}}
          flavor: |
            latest=false

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2

      - name: Log into GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push to GitHub Container Registry
        id: docker_build
        uses: docker/build-push-action@v4
        with:
          builder: ${{ steps.buildx.outputs.name }}
          build-args: |
            NODE_IMAGE_VERSION=${{ needs.build.outputs.nodeVersion }}
          context: .
          file: Dockerfile.ci
          platforms: |
            linux/amd64
            linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
