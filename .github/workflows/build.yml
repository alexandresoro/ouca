name: Build backend

on:
  push:
    branches:
      - main
    tags:
      - "v*.*.*"
      - "*.*.*"
  pull_request:
    branches:
      - main

jobs:
  check-build:
    runs-on: ubuntu-latest

    outputs:
      nodeVersion: ${{ steps.nodeVersion.outputs.version }}

    strategy:
      matrix:
        include:
          - node-version: 18
            type: "build,lts"
            published: true
          - node-version: latest
            type: "next"
            published: false

    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install dependencies
        run: npm ci

      - name: Lint
        run: npm run lint

      - name: Prettier
        run: npm run prettier:check

      - name: Test
        run: npm test

      - name: Build
        run: npm run backend build

      - name: Set supported node version
        id: nodeVersion
        if: matrix.published && github.event_name == 'push'
        run: echo "version=${{ matrix.node-version }}" >> $GITHUB_OUTPUT

      - name: Upload artifact
        if: matrix.published && github.event_name == 'push'
        uses: actions/upload-artifact@v3
        with:
          name: dist-node-lts
          path: | 
            packages/*/dist/
            packages/backend/migrations/
            **/package.json
            **/package-lock.json
            !**/node_modules/**
          retention-days: 1
          if-no-files-found: error


  publish-package:
    needs: check-build

    if: github.event_name == 'push'
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Retrieve artifact
        uses: actions/download-artifact@v3
        with:
          name: dist-node-lts
          path: build

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            ghcr.io/${{ github.repository }}
          tags: |
            # branch event
            type=ref,event=branch
            # tag event
            type=ref,event=tag
            # set latest tag for default branch
            type=raw,value=latest,enable={{is_default_branch}}
          flavor: |
            latest=false

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2

      - name: Log into GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push to GitHub Container Registry
        id: docker_build
        uses: docker/build-push-action@v3
        with:
          builder: ${{ steps.buildx.outputs.name }}
          build-args: |
            NODE_IMAGE_VERSION=${{ needs.check-build.outputs.nodeVersion }}
          context: .
          file: Dockerfile.ci
          platforms: |
            linux/amd64
            linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
