# syntax=docker/dockerfile:1
ARG NODE_IMAGE_VERSION=20

FROM node:${NODE_IMAGE_VERSION}-alpine

ARG PNPM_VERSION=latest
RUN corepack enable && corepack prepare pnpm@${PNPM_VERSION} --activate

# Sets to production, it also sets the install script to install deps only
ENV NODE_ENV production

WORKDIR /app

# In the container, listen to outside localhost by default
ENV OUCA_SERVER_HOST 0.0.0.0

# Copy files from the built artifact
COPY build/ /app/

# Install production deps
RUN npm pkg delete scripts.prepare && \
  pnpm i --frozen-lockfile && \
  # Cleanup file not needed anymore
  rm -f pnpm-lock.yaml

WORKDIR /app/packages/backend/dist

# Create the necessary directories
RUN mkdir public && \
  mkdir uploads

ARG GIT_SHA
ENV SENTRY_RELEASE ${GIT_SHA}

ENTRYPOINT ["node", "main.js"]

EXPOSE 4000/tcp
